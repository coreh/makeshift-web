:root {
    --surface-minus-2: #18181a;
    --surface-minus-1: #232326;
    --surface-0: #39393e;
    --surface-plus-1: #5c5c66;
    --surface-plus-2: #7c7c87;

    --surface-minus-2-contrast: #fff;
    --surface-minus-1-contrast: #fff;
    --surface-0-contrast: #fff;
    --surface-plus-1-contrast: #fff;
    --surface-plus-2-contrast: #000;

    --accent-error-danger: #cc3b40;
    --accent-warning: #f8a34e;
    --accent-success: #3bb273;
    --accent-light: #fcd34d;
    --accent-resource: #10b981;
    --accent-asset: #a156d6;
    --accent-code: #ea7c45;

    --accent-primary: #799bbb;
    --accent-primary-contrast: #fff;
    --accent-error-danger-contrast: #fff;
    --accent-warning-contrast: #000;
    --accent-success-contrast: #000;
    --accent-light-contrast: #000;
    --accent-resource-contrast: #000;
    --accent-asset-contrast: #fff;
    --accent-code-contrast: #fff;

    --accent: var(--surface-plus-1);
    --contrast: var(--surface-plus-1-contrast);
    --text: var(--surface-plus-1-contrast);

    --control-radius: 0.3rem;
    --control-height: 2rem;
    --control-padding-x: 0.5rem;
    --control-gap: 0.5rem;
    --control-indent: 1rem;

    --shadow-low: 0 1px 0 rgba(0, 0, 0, 0.2);
    --shadow-medium: 0 2px 2px rgba(0, 0, 0, 0.2);
    --shadow-high: 0 4px 4px rgba(0, 0, 0, 0.2);

    font-size: 12px;
    color-scheme: dark;
}

* {
    box-sizing: border-box;
    min-width: 0; /* Makes flexbox more predictable */
    font-family: system-ui;
}

body {
    margin: 0;
    background: var(--surface-0);
    color: var(--surface-0-contrast);
}

main {
    display: flex;
    flex-direction: column;
    height: 100vh;
    padding: var(--control-gap);
}

textarea,
input[type="text"],
input[type="number"] {
    font: inherit;
    background: inherit;
    color: inherit;
    border: none;
    resize: none;
}

.context\:primary {
    --accent: var(--accent-primary);
    --contrast: var(--accent-primary-contrast);
}

.context\:error-danger {
    --accent: var(--accent-error-danger);
    --contrast: var(--accent-error-danger-contrast);
}

.context\:warning {
    --accent: var(--accent-warning);
    --contrast: var(--accent-warning-contrast);
}

.context\:success {
    --accent: var(--accent-success);
    --contrast: var(--accent-success-contrast);
}

.context\:light {
    --accent: var(--accent-light);
    --contrast: var(--accent-light-contrast);
}

.context\:resource {
    --accent: var(--accent-resource);
    --contrast: var(--accent-resource-contrast);
}

.context\:asset {
    --accent: var(--accent-asset);
    --contrast: var(--accent-asset-contrast);
}

.context\:code {
    --accent: var(--accent-code);
    --contrast: var(--accent-code-contrast);
}

.context\:none {
    --accent: var(--surface-plus-1);
    --contrast: var(--surface-plus-1-contrast);
}

.Button {
    display: flex;
    /* flex-grow: 1; */
    /* flex-basis: 0; */
    align-items: center;
    justify-content: center;
    gap: var(--control-gap);
    appearance: none;
    font-size: inherit;
    border-radius: var(--control-radius);
    border: none;
    height: var(--control-height);
    padding-left: var(--control-padding-x);
    padding-right: var(--control-padding-x);
    box-shadow: var(--shadow-low);
    text-shadow: var(--shadow-low);
    background-color: var(--accent);
    color: var(--contrast);

    /* special case buttons without context to be a bit darker */
    &:not([class*="context:"]) {
        background-color: var(--surface-0);
        color: var(--surface-0-contrast);
    }

    &:not(:disabled):hover {
        filter: brightness(1.1);
    }

    &:not(:disabled):active {
        filter: brightness(1.3);
    }

    &:disabled {
        background-color: color-mix(in srgb, var(--accent) 10%, transparent);
        color: color-mix(in srgb, var(--accent) 60%, transparent);
    }

    &:focus {
        outline: 2px solid color-mix(in srgb, var(--accent) 80%, transparent);
        outline-offset: 1px;
    }
}

.VStack {
    display: flex;
    flex-direction: column;
    gap: var(--control-gap);
    align-items: stretch;

    &.grow {
        flex-grow: 1;
    }
}

.HStack {
    display: flex;
    flex-direction: row;
    gap: var(--control-gap);
    align-items: stretch;

    &.grow {
        flex-grow: 1;
    }
}

.Status {
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text);
    height: var(--control-height);
    gap: var(--control-gap);

    &::before {
        content: "‚óè";
        color: var(--accent);
    }
}

.TreeNode {
    .Chevron {
        appearance: none;
        background: transparent;
        border: none;
        color: inherit;
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
    }
    .Heading {
        display: flex;
        align-items: center;
        gap: var(--control-gap);
        justify-content: start;
        position: relative;
        height: var(--control-height);
        padding-left: calc(var(--control-indent) * 2);
        padding-right: var(--control-padding-x);

        &.state\:selected {
            background-color: color-mix(
                in srgb,
                var(--accent) 75%,
                transparent
            );
            outline: 1px solid var(--accent);
            color: var(--accent-contrast);
            text-shadow: var(--shadow-low);

            .EntityIcon,
            .Chevron {
                color: var(--accent-contrast);
                filter: drop-shadow(var(--shadow-low));
            }
        }
    }
    .Content {
        margin-left: var(--control-indent);
        border-left: 1px solid var(--surface-plus-1);
        transform-origin: top left;
    }
    .Content[data-state="open"] {
        animation: tree-slide-down 300ms cubic-bezier(0.87, 0, 0.13, 1);
    }
    .Content[data-state="closed"] {
        animation: tree-slide-up 300ms cubic-bezier(0.87, 0, 0.13, 1);
    }
}

@keyframes tree-slide-down {
    from {
        height: 0;
        opacity: 0;
        overflow: hidden;
    }
    to {
        height: var(--radix-collapsible-content-height);
    }
}

@keyframes tree-slide-up {
    from {
        height: var(--radix-collapsible-content-height);
    }
    to {
        overflow: hidden;
        opacity: 0;
        height: 0;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.EntityIcon,
.ComponentIcon {
    color: var(--accent);
}

svg.lucide {
    width: 1rem;
    height: 1rem;
    display: inline-flex;
}

.EntityTree {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-basis: 0;
    overflow: auto;
}

.Panel {
    background-color: var(--surface-minus-1);
    color: var(--surface-minus-1-contrast);
    border-radius: var(--control-radius);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-basis: 0;
    overflow: auto;
    gap: var(--control-gap);
}

.Toolbar {
    background-color: var(--surface-minus-1);
    color: var(--surface-minus-1-contrast);
    border-radius: var(--control-radius);
    display: flex;
    flex-direction: row;
    height: calc(var(--control-height) * 2);
    padding-left: var(--control-indent);
    padding-right: var(--control-indent);
    align-items: center;
    justify-content: start;
    gap: var(--control-gap);
}

.Inspector {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-basis: 0;
    overflow: auto;
}

.ComponentInspector {
    display: flex;
    flex-direction: column;
    border-bottom: 1px solid var(--surface-0);

    .Heading {
        font-size: 0.8rem;
        text-shadow: var(--shadow-low);
        display: flex;
        align-items: center;
        height: var(--control-height);
        padding-left: var(--control-padding-x);
        padding-right: var(--control-padding-x);
        gap: var(--control-gap);

        .EntityIcon,
        .Chevron {
            will-change: transform; /* fix for some flickering with the filter */
            filter: drop-shadow(var(--shadow-low));
        }
    }

    .Content {
        border-top: 1px solid var(--surface-minus-1);
        border-bottom: 1px solid var(--surface-minus-1);
        display: flex;
        flex-direction: column;
        gap: var(--control-gap);
        padding: var(--control-padding-x);
    }
}

.ComponentEditor {
    textarea {
        background-color: var(--surface-minus-2);
        font-family: monospace;
        padding-left: var(--control-padding-x);
        padding-right: var(--control-padding-x);
        border-radius: var(--control-radius);
        height: calc(var(--control-height) * 4);
    }

    label {
        display: flex;
        color: var(--accent);
        height: var(--control-height);
        align-items: center;
        padding-left: var(--control-padding-x);
        flex-grow: 1;
    }

    input {
        background-color: var(--surface-minus-2);
        padding-left: var(--control-padding-x);
        padding-right: var(--control-padding-x);
        border-radius: var(--control-radius);
        height: var(--control-height);
    }
}
